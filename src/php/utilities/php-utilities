#!/bin/sh

# shellcheck source=src/common/utilities/common-utilities
. "$SNAP/utilities/common-utilities"

DEFAULT_MEMORY_LIMIT="512M"
DEFAULT_OPCACHE_CONSUMPTION="128"
export PHP_FPM_PIDFILE="/tmp/pids/php-fpm.pid"
export PHP_FPM_SOCKET="/tmp/sockets/php-fpm.sock"

mkdir -p "$(dirname "$PHP_FPM_PIDFILE")"
mkdir -p "$(dirname "$PHP_FPM_SOCKET")"
chmod 750 "$(dirname "$PHP_FPM_PIDFILE")"
chmod 750 "$(dirname "$PHP_FPM_SOCKET")"

restart_php_if_running()
{
	if php_is_running; then
		# Restart PHP by stopping it and letting systemd start it again.
		pid="$(php_pid)"
		printf "Restarting PHP... "
		if output="$(kill -15 "$pid" 2>&1)"; then
			while kill -0 "$pid" 2>/dev/null; do
				sleep 1
			done
			printf "done\n"
		else
			printf "error\n"
			echo "$output"
			return 1
		fi
	fi
}

php_is_running()
{
	[ -f "$PHP_FPM_PIDFILE" ] && [ -S "$PHP_FPM_SOCKET" ]
}

wait_for_php()
{
	wait_for_command "Waiting for PHP" php_is_running
}

php_pid()
{
	if php_is_running; then
		cat "$PHP_FPM_PIDFILE"
	else
		echo "Unable to get PHP PID as it's not yet running" >&2
		echo ""
	fi
}

php_reload()
{
	if php_is_running; then
		pid="$(php_pid)"
		kill -USR1 "$pid" > /dev/null
	fi
}

php_memory_limit()
{
	memory_limit="$(snapctl get php.memory-limit)"
	if [ -z "$memory_limit" ]; then
		memory_limit="$DEFAULT_MEMORY_LIMIT"
		php_set_memory_limit "$memory_limit"
		php_set_previous_memory_limit "$memory_limit"
	fi

	echo "$memory_limit"
}

php_set_memory_limit()
{
	snapctl set php.memory-limit="$1"
}

php_previous_memory_limit()
{
	snapctl get private.php.memory-limit
}

php_set_previous_memory_limit()
{
	snapctl set private.php.memory-limit="$1"
}

# Set the following values - kz6fittycent
# opcache.memory_consumption
# opcache.interned_strings_buffer
# See https://github.com/nextcloud-snap/nextcloud-snap/issues/2024

php_opcache_memory_consumption()
{
    opcache_mc="$(php_previous_opcache_memory_consumption)"
    if [ -z "$opcache_mc" ]; then
        opcache_mc="$DEFAULT_OPCACHE_CONSUMPTION"
        php_set_opcache_memory_consumption "$opcache_mc"
        php_set_previous_opcache_memory_consumption "$opcache_mc"
    fi
    
    echo "$opcache_mc"
}

php_set_opcache_memory_consumption()
{
    snapctl set opcache.memory_consumption="$1"
}

php_previous_opcache_memory_consumption()
{
    snapctl get private.opcache.memory_consumption
}

php_set_previous_opcache_memory_consumption()
{
    snapctl set private.opcache.memory_consumption="$1"
}
